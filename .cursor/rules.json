{
  "name": "Pandora Project Rules",
  "description": "Rules and guidelines for the Pandora project",
  "technologies": {
    "required": [
      {
        "name": "Next.js",
        "version": "15.x",
        "canUpgrade": true,
        "canDowngrade": false
      },
      {
        "name": "shadcn/ui",
        "description": "Component library",
        "canRemove": false
      },
      {
        "name": "Tailwind CSS",
        "version": "4.x",
        "canUpgrade": true,
        "canDowngrade": false
      },
      {
        "name": "Auth.js",
        "description": "Use Auth.js (formerly next-auth) for authentication and session management.",
        "required": true
      }
    ],
    "forbidden": []
  },
  "conventions": {
    "fileStructure": {
      "description": "Following Next.js App Router convention"
    },
    "packageManager": {
      "name": "pnpm",
      "description": "Always use pnpm for package management",
      "required": true
    },
    "routeHandlers": {
      "description": "Dynamic route parameter handling for Next.js 15",
      "rules": [
        "Route parameters in dynamic routes must be structured as Promise objects",
        "Use { params }: { params: Promise<{ paramName: string }> } as function argument signature",
        "Always await params before using them: const { paramName } = await params",
        "This applies to all API route handlers and page components with dynamic segments"
      ],
      "examples": [
        "export async function GET(request, { params }: { params: Promise<{ slug: string }> }) { const { slug } = await params; }"
      ]
    }
  }
} 